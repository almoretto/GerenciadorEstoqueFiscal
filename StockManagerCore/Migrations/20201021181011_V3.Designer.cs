// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockManagerCore.Data;

namespace StockManagerCore.Migrations
{
    [DbContext(typeof(StockDBContext))]
    [Migration("20201021181011_V3")]
    partial class V3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StockManagerCore.Models.InputProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DhEmi")
                        .HasColumnType("datetime2");

                    b.Property<string>("NItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("QCom")
                        .HasColumnType("int");

                    b.Property<int?>("StockId")
                        .HasColumnType("int");

                    b.Property<int?>("StockId1")
                        .HasColumnType("int");

                    b.Property<string>("UCom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("VTotTrib")
                        .HasColumnType("float");

                    b.Property<double>("VUnCom")
                        .HasColumnType("float");

                    b.Property<double>("VUnTrib")
                        .HasColumnType("float");

                    b.Property<double>("Vtotal")
                        .HasColumnType("float");

                    b.Property<string>("XProd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.HasIndex("StockId");

                    b.HasIndex("StockId1");

                    b.ToTable("InputProducts");
                });

            modelBuilder.Entity("StockManagerCore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Group")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Group = "Anel"
                        },
                        new
                        {
                            Id = 2,
                            Group = "Argola"
                        },
                        new
                        {
                            Id = 3,
                            Group = "Bracelete"
                        },
                        new
                        {
                            Id = 4,
                            Group = "Brinco"
                        },
                        new
                        {
                            Id = 5,
                            Group = "Choker"
                        },
                        new
                        {
                            Id = 6,
                            Group = "Colar"
                        },
                        new
                        {
                            Id = 7,
                            Group = "Corrente"
                        },
                        new
                        {
                            Id = 8,
                            Group = "Pingente"
                        },
                        new
                        {
                            Id = 9,
                            Group = "Pulseira"
                        },
                        new
                        {
                            Id = 10,
                            Group = "Tornozeleira"
                        },
                        new
                        {
                            Id = 11,
                            Group = "Peças Montagem"
                        },
                        new
                        {
                            Id = 12,
                            Group = "Variados"
                        },
                        new
                        {
                            Id = 13,
                            Group = "Broche"
                        });
                });

            modelBuilder.Entity("StockManagerCore.Models.SoldProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DhEmi")
                        .HasColumnType("datetime2");

                    b.Property<string>("NItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("QCom")
                        .HasColumnType("int");

                    b.Property<int?>("StockId")
                        .HasColumnType("int");

                    b.Property<int?>("StockId1")
                        .HasColumnType("int");

                    b.Property<string>("UCom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("VTotTrib")
                        .HasColumnType("float");

                    b.Property<double>("VUnCom")
                        .HasColumnType("float");

                    b.Property<double>("VUnTrib")
                        .HasColumnType("float");

                    b.Property<double>("Vtotal")
                        .HasColumnType("float");

                    b.Property<string>("XProd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.HasIndex("StockId");

                    b.HasIndex("StockId1");

                    b.ToTable("SoldProducts");
                });

            modelBuilder.Entity("StockManagerCore.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("StockManagerCore.Models.InputProduct", b =>
                {
                    b.HasOne("StockManagerCore.Models.Product", "ProductNav")
                        .WithOne("InputProduct")
                        .HasForeignKey("StockManagerCore.Models.InputProduct", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockManagerCore.Models.Stock", null)
                        .WithMany("InputProducts")
                        .HasForeignKey("StockId");

                    b.HasOne("StockManagerCore.Models.Stock", null)
                        .WithMany("ProductsInputs")
                        .HasForeignKey("StockId1");
                });

            modelBuilder.Entity("StockManagerCore.Models.SoldProduct", b =>
                {
                    b.HasOne("StockManagerCore.Models.Product", "Product")
                        .WithOne("SoldProduct")
                        .HasForeignKey("StockManagerCore.Models.SoldProduct", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockManagerCore.Models.Stock", null)
                        .WithMany("ProductsSales")
                        .HasForeignKey("StockId");

                    b.HasOne("StockManagerCore.Models.Stock", null)
                        .WithMany("SoldProducts")
                        .HasForeignKey("StockId1");
                });
#pragma warning restore 612, 618
        }
    }
}
